names(auto)
View(auto)
## LECTURA DE TABLAS INCRUSTADAS EN ARCHIVOS HTML
#01-analisis-html
library(XML)
wpob.url <- "data/WorldPopulation-wiki.html"
tablas <- readHTMLTable(wpob.url)
# str(tablas)
most_wpob <- tablas[[5]]
# head(most_wpob,3)
tabla_unica <- readHTMLTable(wpob.url, which = 5)
# str(tabla_unica)
# tabla_unica
## LECTURA DE TABLAS INCRUSTADAS EN ARCHIVOS HTML
#01-analisis-html
library(XML)
wpob.url <- "data/WorldPopulation-wiki.html"
tablas <- readHTMLTable(wpob.url)
most_wpob <- tablas[[5]]
head(most_wpob,3)
tabla_unica <- readHTMLTable(wpob.url, which = 5)
View(tabla_unica)
View(auto)
View(bm.data)
View(catalog.data)
View(bm.datos)
View(most_wpob)
View(pob.esp)
View(std_courses.pob)
View(students.pob)
View(tabla_unica)
View(tabla_unica)
View(tablas)
View(usd.pob)
View(usd.pob)
View(catalog.data)
root.node[1]
root.node[2]
#catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
catalog.data <- xmlApply(root.node, skip = TRUE)
#root.node <- xmlRoot(catalog.doc)
root.node <- xmlRoot(catalog.doc, skip=TRUE)
root.node[1]
catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
View(catalog.data)
catalog.doc <- xmlParse(catalog.url,isSchema =TRUE)
View(catalog.datos)
View(bm.data)
root.node <- xmlRoot(catalog.doc)
catalog.doc <- xmlParse(catalog.url)
root.node <- xmlRoot(catalog.doc)
root.node[1]
root.node <- xmlRoot(catalog.doc)
root.node[1]
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- as.data.frame(xpathSApply(root.node, '//PMID', xmlValue))
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- as.data.frame(xpathSApply(root.node, xmlValue))
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- as.data.frame(xpathSApply(root.node, function(x) xmlApply(x, xmlValue)))
catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- as.data.frame(catalog.data)
View(catalog.datos)
catalog.doc <- xmlParse(catalog.url)
root.node <- xmlRoot(catalog.doc)
#catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- as.data.frame(catalog.data)
View(catalog.datos)
#catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
catalog.datos <- data.frame( t(root.node), row.names = NULL )
#catalog.data <- xmlApply(root.node, function(x) xmlApply(x, xmlValue))
#catalog.datos <- data.frame( t(catalog.data), row.names = NULL )
catalog.datos <- data.frame( catalog.doc, row.names = NULL )
View(bm.data)
root.node <- xmlRoot(catalog.doc)
root.node[1]
catalog.datos <- xmlToDataFrame(catalog.url)
View(catalog.datos)
catalog.datos <- xmlToDataFrame(catalog.url)
catalog.datos <- xmlToDataFrame(catalog.url)
View(catalog.datos)
View(catalog.data)
usd.pob <- fromJSON(usd.url)
View(usd.pob)
usd.pob <- fromJSON(usd.url,skip=TRUE)
usd.pob[1]
usd.pob <- fromJSON(usd.url) %>% as.data.frame
usd.pob <- fromJSON(usd.url) > as.data.frame
View(usd.pob)
usd.pob <- fromJSON(usd.url) as.data.frame
usd.pob <- as.data.frame(fromJSON(usd.url))
View(usd.pob)
usd.pob <- fromJSON(usd.url, simplifyVector = TRUE)
usd.pob <- fromJSON(usd.url)
View(usd.pob)
names(usd.pob)
usd.data <- data.matrix(c[],names(usd.pob))
usd.data <- data.matrix(nrow=0,names(usd.pob))
usd.data <- data.matrix(names(usd.pob))
usd.data <- data.matrix()
usd.data <- data.matrix()
usd.data <- data.frame()
usd.pob) {
print(u)
}
for (i in 1:usd.pob) {
print(i)
}
usd.pob <- fromJSON(usd.url)
for (i in 1:usd.pob) {
print(i)
}
for (i in 1:lenght(usd.pob)) {
print(i)
}
for (i in 1:lenght(usd.pob)) {
print(i)
}
usd.pob$eur
names(usd.pob)) {
print(abr)
}
for (abr in names(usd.pob)) {
print(abr)
}
for (abr in names(usd.pob)) {
print(names(abr))
}
for (i in lenght(names(usd.pob))) {
abr = names(usd.pob)[i]
print(usd.pob$abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
View(usd.pob)
View(usd.pob)
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(usd.pob$abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(usd.pob$abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in length(usd.pob)) {
abr = names(usd.pob)[i,]
print(abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
length(usd.pob)
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(i,abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in length(usd.pob)) {
abr = names(usd.pob)[i]
print(i)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in 1:length(usd.pob)) {
abr = names(usd.pob)[i]
print(abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in 1:length(usd.pob)) {
abr = names(usd.pob)[i]
print(usd.pob[abr])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr]$abr)
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[abr][1]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[abr][2]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(fromJSON(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(c(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(c(usd.pob[abr])[2])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(c(usd.pob[abr])[1])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(matrix(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(list(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(list(usd.pob[abr])[1,])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(list(usd.pob[abr])[1])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(list(usd.pob[abr])[2])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(type(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(typeof(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(table(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[abr][1])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(unlist(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names.XMLNode(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[abr]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
View(usd.data)
View(usd.pob)
for (abr in names(usd.pob)) {
print(names(usd.pob$abr))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(names(usd.pob[[abr]]))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
print(usd.pob[[abr]])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (i in seq_along(usd.pob)) {
print(names(usd.pob[[i]]))
}
for (i in seq_along(usd.pob)) {
print(usd.pob[[i]])
}
list1 <- list(1:3, 4:7, 8:10)
list2 <- list(2:5, 4:9, 19:23, 15:18)
list3 <- list(1:5)
nested_list <- list(list1, list2, list3)
names(nested_list) <- c("first", "second", "third")
for (i in seq_along(nested_list)) {
names(nested_list[[i]]) <- paste(names(nested_list)[i],
seq_along(nested_list[[i]]),
sep = "_")
}
View(nested_list)
nested_list <- list(list1, list2, list3)
names(nested_list) <- c("first", "second", "third")
View(nested_list)
for (i in seq_along(nested_list)) {
names(nested_list[[i]]) <- paste(names(nested_list)[i],
seq_along(nested_list[[i]]),
sep = "_")
}
nested_list <- list(list1, list2, list3)
names(nested_list) <- c("first", "second", "third")
nested_list <- list(list1, list2, list3)
names(nested_list) <- c("first", "second", "third")
for (i in seq_along(nested_list)) {
print( names(nested_list[[i]]) <- paste(names(nested_list)[i],
seq_along(nested_list[[i]]),
sep = "_"))
}
for (abr in names(usd.pob)) {
print(usd.pob[[abr]])
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
print(c(abr,dat))
#usd.data[nrow(usd.data) + 1,] = c[abr, ]
}
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
View(usd.data)
library(jsonlite)
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.data <- data.frame()
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
View(usd.data)
View(usd.data)
usd.data <- seq_along(usd.pob)
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
usd.pob <- fromJSON(usd.url)
usd.data <- data.frame()
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
View(usd.data)
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = c(dat)
}
usd.data <- data.frame()
for (abr in names(usd.pob)) {
dat = usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = c(dat)
}
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
#usd.data[nrow(usd.data) + 1,] = dat
usd.data <- rbind(usd.data, dat)
}
warnings()
names(usd.pob[1])
names(usd.pob[[1]])
usd.data <- data.frame(names = names(usd.pob[[1]]))
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.data <- data.frame(names = names(usd.pob[[1]]))
View(usd.data)
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
#usd.data[nrow(usd.data) + 1,] = dat
usd.data <- rbind(usd.data, dat)
}
cat(ncols(usd.data))
cat(ncol(usd.data))
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
cat(ncol(dat))
#usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
cat(ncol(dat))
#usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
cat(ncol(dat))
#usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
print(ncol(dat))
#usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
warnings()
usd.data <- data.frame(names = names(usd.pob[[1]]))
cat(ncol(usd.data))
View(usd.data)
usd.data <- data.frame(names(usd.pob[[1]]))
cat(ncol(usd.data))
usd.data <- data.frame( dimnames(names(usd.pob[[1]])))
cat(ncol(usd.data))
usd.data <- data.frame( dimnames=names(usd.pob[[1]]))
cat(ncol(usd.data))
View(usd.data)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(df) <- usd.colnames
cat(ncol(usd.data))
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
cat(ncol(usd.data))
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
#usd.data <- rbind(usd.data, dat)
}
View(usd.data)
usd.pob <- fromJSON(usd.url)
library(jsonlite)
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
#usd.data[nrow(usd.data) + 1,] = dat
usd.data <- rbind(usd.data, dat)
}
warnings()
library(jsonlite)
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
View(usd.data)
library(jsonlite)
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame()
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
gc()
library(jsonlite)
usd.url <- "http://www.floatrates.com/daily/usd.json"
usd.pob <- fromJSON(usd.url)
usd.colnames <- names(usd.pob[[1]])
usd.data <- data.frame(matrix(ncol = length(usd.colnames), nrow = 0))
colnames(usd.data) <- usd.colnames
for (abr in names(usd.pob)) {
dat <- usd.pob[[abr]]
usd.data[nrow(usd.data) + 1,] = dat
}
View(dat)
auto <- read.csv("data/auto-mpg.csv", header=TRUE, sep=",")
# str(auto)
# head(auto,4)
names(auto)
